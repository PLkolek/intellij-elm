plugins {
    id 'org.jetbrains.intellij' version "0.1.10"
}

version = "${version}.$buildNumber"
allprojects {

    apply plugin: 'java'
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    sourceSets {
        main {
            java.srcDirs 'src', 'gen'
            resources.srcDirs 'resources', 'resources'
        }
        test {
            java.srcDir 'test'
        }
    }

    apply plugin: 'org.jetbrains.intellij'
    intellij {
        version ideaVersion
        plugins 'copyright'
        downloadSources Boolean.valueOf(sources)
        sameSinceUntilBuild Boolean.valueOf(isEAP)
    }

    test {
        useJUnit {
        }
        testLogging {
            exceptionFormat = 'full'
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
}

lexerTask(project, 'ElmLexer', 'mkolaczek.elm.lexer')

apply plugin: 'idea'
idea {
    project {
        jdkName = javaVersion
        languageLevel = javaVersion
    }
    module {
        generatedSourceDirs += file('gen')
    }
}

def lexerTask(project, lexerName, pkg) {
    return tasks.create("generate${lexerName}", JavaExec) {
        def src = "$project.projectDir/src/${pkg}/${lexerName}.flex"
        def dst = "$project.projectDir/gen/$pkg"

        main = 'jflex.Main'
        classpath = files('lib/jflex/jflex-1.7.0-SNAPSHOT.jar')

        args = ['--skel', 'lib/jflex/idea-flex.skeleton',
                '-d', dst,
                src
        ]

        inputs.file file(src)
        outputs.dir file("$dst/${lexerName}.java")
    }
}